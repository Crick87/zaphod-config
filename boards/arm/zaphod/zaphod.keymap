/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_es_latam.h"

#define SYM_L 1
#define NUM_L 2
#define MED_L 3
#define NAV_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Clmk";
            bindings = <
                &kp Q       &kp W        &kp F       &kp P        &kp G        &kp J    &kp L        &kp U              &kp Y             &hm ES_N_TILDE ES_ACUTE
                &hm LGUI A  &hm LCTRL R  &hm LALT S  &hm LSHFT T  &kp D        &kp H    &hm LSHFT N  &hm LALT E         &hm LCTRL I       &hm LGUI O
                &kp Z       &kp X        &kp C       &kp V        &kp B        &kp K    &kp M        &hm ES_SEMI COMMA  &hm ES_COLON DOT  &hm ES_UNDER ES_MINUS
                                        &lt SYM_L BKSP  &lt NUM_L SPACE        &lt MED_L RET  &lt NAV_L DEL
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp ES_PIPE  &kp ES_AMPS   &kp ES_DLLR  &kp ES_HASH  &kp ES_IQMARK        &kp ES_QMARK  &kp ES_EQUAL  &kp ES_DQT    &kp ES_APOS   &kp ES_GRAVE
                &kp ES_LT    &kp ES_LBKT   &kp ES_LBRC  &kp ES_LPAR  &kp ES_IEXCL         &kp ES_EXCL   &kp ES_RPAR   &kp ES_RBRC   &kp ES_RBKT   &kp ES_GT
                &kp ES_NOT   &kp ES_TILDE  &kp ES_BSLH  &kp ES_PLUS  &kp ES_ASTRK         &kp ES_PRCNT  &kp ES_AT     &kp ES_SLASH  &kp ES_CARET  &kp ES_UNDER
                                                                 &trans  &kp SPACE        &kp RET  &kp DEL
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &hm F11 F1    &hm F12 F2    &kp F3        &kp F4        &kp F5             &kp F6       &kp F7        &kp F8      &kp F9       &kp F10
                &hm LGUI N1   &hm LCTRL N2  &hm LALT N3   &hm LSHFT N4  &kp N5             &kp N6       &hm RSHFT N7  &hm LALT N8 &hm RCTRL N9 &hm LGUI N0
                &kp ES_ASTRK  &kp ES_SLASH  &kp ES_MINUS  &kp ES_PLUS   &kp ES_LPAR        &kp ES_RPAR  &kp ES_EQUAL  &kp COMMA   &kp DOT      &kp ES_UNDER
                                                                   &kp BKSP  &trans        &kp RET  &kp DEL
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &out OUT_TOG  &none         &none         &none         &bt BT_CLR          &none  &none         &kp C_STOP        &none         &none
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &none  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &none 
                &none         &none         &none         &none         &none               &none  &kp C_VOL_DN  &kp C_MUTE        &kp C_VOL_UP  &none 
                                                                        &none  &none        &trans  &none
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &kp ESC   &kp TAB    &kp CAPS  &kp PSCRN  &none        &kp PG_UP  &none     &kp UARW   &none     &none 
                &kp LGUI  &kp LCTRL  &kp LALT  &kp LSHFT  &none        &kp PG_DN  &kp LARW  &kp DARW   &kp RARW  &none 
                &none     &none      &none     &none      &none        &none      &kp HOME  &kp PG_DN  &kp END   &none 
                                             &kp ESC  &kp SPACE        &kp RET  &trans
            >;
        };
    };
};
